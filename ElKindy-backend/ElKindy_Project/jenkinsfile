pipeline{
    agent any
    tools{
        nodejs '21.6.2'
    }
    stages {
        stage('Install dependencies') {
            steps{
                script {
                    try {
                        sh('npm install')
                    } catch (err) {
                        currentBuild.result = 'FAILURE'
                        error("Failed to install dependencies: ${err}")
                    }

                }
            }
        }
        stage('Unit Test') {
            steps{
                script{
                    try {
                        echo 'This is a testing stage for unit tests.'
                    } catch (err) {
                        currentBuild.result = 'FAILURE'
                        error("Unit tests failed: ${err}")
                    }
                }
            }
        }
        stage('SonarQube Analysis') {
               /* steps{
                script {
                    try{
                        def scannerHome = tool 'scanner'
                withSonarQubeEnv {
            sh "${scannerHome}/bin/sonar-scanner"
                    } 
                    }
                catch (err) {
                        currentBuild.result = 'FAILURE'
                        error("Failed to build application: ${err}")
                    }
                }
            }*/
            steps{
                script{
                    try {
                        echo 'This is a testing stage for SonarQube Analysis.'
                    } catch (err) {
                        currentBuild.result = 'FAILURE'
                        error("Unit tests failed: ${err}")
                    }
                }
            }
        }
        stage('Build application') {
            steps{
                script {
                    try {
                        echo 'This is a testing stage for build application.'

                    } catch (err) {
                        currentBuild.result = 'FAILURE'
                        error("Failed to build application: ${err}")
                    }

                }
            }
        }
        stage('Building images (node and mongo)') {

            steps{
                script {
                    sh 'docker build -t 192.168.33.10:8083/nodemongoapp:6.0 .'
                }
            }
        }

    }
}